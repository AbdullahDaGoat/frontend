/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from "./routes/__root";
import { Route as UploadImport } from "./routes/upload";
import { Route as SettingsImport } from "./routes/settings";
import { Route as RandomImport } from "./routes/random";
import { Route as FeaturedImport } from "./routes/featured";
import { Route as ContactImport } from "./routes/contact";
import { Route as AccountImport } from "./routes/account";
import { Route as AboutImport } from "./routes/about";
import { Route as IndexImport } from "./routes/index";

// Create/Update Routes

const UploadRoute = UploadImport.update({
  path: "/upload",
  getParentRoute: () => rootRoute,
} as any);

const SettingsRoute = SettingsImport.update({
  path: "/settings",
  getParentRoute: () => rootRoute,
} as any);

const RandomRoute = RandomImport.update({
  path: "/random",
  getParentRoute: () => rootRoute,
} as any);

const FeaturedRoute = FeaturedImport.update({
  path: "/featured",
  getParentRoute: () => rootRoute,
} as any);

const ContactRoute = ContactImport.update({
  path: "/contact",
  getParentRoute: () => rootRoute,
} as any);

const AccountRoute = AccountImport.update({
  path: "/account",
  getParentRoute: () => rootRoute,
} as any);

const AboutRoute = AboutImport.update({
  path: "/about",
  getParentRoute: () => rootRoute,
} as any);

const IndexRoute = IndexImport.update({
  path: "/",
  getParentRoute: () => rootRoute,
} as any);

// Populate the FileRoutesByPath interface

declare module "@tanstack/react-router" {
  interface FileRoutesByPath {
    "/": {
      id: "/";
      path: "/";
      fullPath: "/";
      preLoaderRoute: typeof IndexImport;
      parentRoute: typeof rootRoute;
    };
    "/about": {
      id: "/about";
      path: "/about";
      fullPath: "/about";
      preLoaderRoute: typeof AboutImport;
      parentRoute: typeof rootRoute;
    };
    "/account": {
      id: "/account";
      path: "/account";
      fullPath: "/account";
      preLoaderRoute: typeof AccountImport;
      parentRoute: typeof rootRoute;
    };
    "/contact": {
      id: "/contact";
      path: "/contact";
      fullPath: "/contact";
      preLoaderRoute: typeof ContactImport;
      parentRoute: typeof rootRoute;
    };
    "/featured": {
      id: "/featured";
      path: "/featured";
      fullPath: "/featured";
      preLoaderRoute: typeof FeaturedImport;
      parentRoute: typeof rootRoute;
    };
    "/random": {
      id: "/random";
      path: "/random";
      fullPath: "/random";
      preLoaderRoute: typeof RandomImport;
      parentRoute: typeof rootRoute;
    };
    "/settings": {
      id: "/settings";
      path: "/settings";
      fullPath: "/settings";
      preLoaderRoute: typeof SettingsImport;
      parentRoute: typeof rootRoute;
    };
    "/upload": {
      id: "/upload";
      path: "/upload";
      fullPath: "/upload";
      preLoaderRoute: typeof UploadImport;
      parentRoute: typeof rootRoute;
    };
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexRoute,
  AboutRoute,
  AccountRoute,
  ContactRoute,
  FeaturedRoute,
  RandomRoute,
  SettingsRoute,
  UploadRoute,
});

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/about",
        "/account",
        "/contact",
        "/featured",
        "/random",
        "/settings",
        "/upload"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/about": {
      "filePath": "about.tsx"
    },
    "/account": {
      "filePath": "account.tsx"
    },
    "/contact": {
      "filePath": "contact.tsx"
    },
    "/featured": {
      "filePath": "featured.tsx"
    },
    "/random": {
      "filePath": "random.tsx"
    },
    "/settings": {
      "filePath": "settings.tsx"
    },
    "/upload": {
      "filePath": "upload.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
